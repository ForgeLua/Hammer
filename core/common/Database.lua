module("Core.Common", package.seeall)
Database = {
  queries = { },
  current_input_file = nil,
  current_output_file = nil,
  Init = function(self, input_filename)
    self.queries = { }
    Core.Common.Logger:Info("Database initialized")
    self.current_input_file = input_filename
    if (input_filename) then
      self.current_output_file = Core.Utils.FileExplorer:GenerateOutputName(input_filename)
      Core.Common.Logger:Info("Initialized for input file: " .. tostring(input_filename))
      return Core.Common.Logger:Info("Output will be: " .. tostring(self.current_output_file))
    end
  end,
  AddQuery = function(self, query)
    return table.insert(self.queries, query)
  end,
  Flush = function(self)
    if #self.queries > 0 then
      local output_path = "./workspace/outputs/" .. tostring(self.current_output_file)
      Core.Utils.FileExplorer:CreateDirectory("./workspace/outputs/")
      local file = io.open(output_path, "w")
      if file then
        file:write("-- Generated by Hammer from Forge project !\n")
        file:write("-- Generated at: " .. tostring(os.date()) .. "\n")
        if self.current_input_file then
          file:write("-- Source file: " .. tostring(self.current_input_file) .. "\n")
        end
        file:write("-- Total queries: " .. tostring(#self.queries) .. "\n")
        file:write("\n")
        local _list_0 = self.queries
        for _index_0 = 1, #_list_0 do
          local query = _list_0[_index_0]
          file:write(tostring(query) .. ";\n")
        end
        file:write("\n-- End of generated content\n")
        file:close()
        Core.Common.Logger:Info(tostring(#self.queries) .. " queries written to " .. tostring(output_path))
        self.queries = { }
        return output_path
      else
        Core.Common.Logger:Error("Could not open output file: " .. tostring(output_path))
        return nil
      end
    else
      Core.Common.Logger:Warning("No queries to flush")
      return nil
    end
  end
}
