module "Core.Common", package.seeall
export Database

Database = {
    queries: {}
    current_input_file: nil
    current_output_file: nil

    Init: (input_filename) =>
        @queries = {}
        Core.Common.Logger\Info "Database initialized"
        @current_input_file = input_filename
        if (input_filename)
            @current_output_file = Core.Utils.FileExplorer\GenerateOutputName input_filename

            Core.Common.Logger\Info "Initialized for input file: #{input_filename}"
            Core.Common.Logger\Info "Output will be: #{@current_output_file}"

    AddQuery: (query) =>
        table.insert @queries, query

    Flush: =>
        if #@queries > 0
            output_path = "./workspace/outputs/#{@current_output_file}"
            
            Core.Utils.FileExplorer\CreateDirectory "./workspace/outputs/"
            
            file = io.open output_path, "w"
            if file
                file\write "-- Generated by Hammer from Forge project !\n"
                file\write "-- Generated at: #{os.date!}\n"
                if @current_input_file
                    file\write "-- Source file: #{@current_input_file}\n"
                file\write "-- Total queries: #{#@queries}\n"
                file\write "\n"

                for query in *@queries
                    file\write "#{query};\n"
                
                file\write "\n-- End of generated content\n"
                file\close!

                Core.Common.Logger\Info "#{#@queries} queries written to #{output_path}"
                @queries = {}
                return output_path
            else
                Core.Common.Logger\Error "Could not open output file: #{output_path}"
                return nil
        else
            Core.Common.Logger\Warning "No queries to flush"
            return nil
}